fragment allCertifyBadTree on CertifyBad {
  justification
  subject {
    __typename
    ... on Package {
      type
      namespaces {
        namespace
        names {
          name
          versions {
            version
            qualifiers {
              key
              value
            }
            subpath
          }
        }
      }
    }
    ... on Source {
      type
      namespaces {
        namespace
        names {
          name
          tag
          commit
        }
      }
    }
    ... on Artifact {
      algorithm
      digest
    }
  }
  origin
  collector
}

mutation CertifyBadM1($package: PkgInputSpec!, $origin: String!, $collector: String!, $justification: String!) {
  ingestCertifyBad(
    subject: {
      package: $package
    }
    pkgMatchType: { pkg: SPECIFIC_VERSION }
    certifyBad: {
      justification: $justification
      origin: $origin
      collector: $collector
    }
  ) {
    ...allCertifyBadTree
  }
}


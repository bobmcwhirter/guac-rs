fragment allIsDependencyTree on IsDependency {
  justification
  package {
    type
    namespaces {
      namespace 
      names {
        name
        versions {
          version
          qualifiers {
            key
            value
          }
          subpath
        }
      }
    }
  }
dependentPackage {
      type
    namespaces {
      namespace 
      names {
        name
        versions {
          version
          qualifiers {
            key
            value
          }
          subpath
        }
      }
    }
  }
versionRange
origin
collector
}

#query QueryDependencies($package: PkgSpec) {
  #IsDependency(isDependencySpec: {package: $package}) {
    #...allIsDependencyTree
  #}
#}
#
#query QueryDependents($package: PkgSpec, $version: String) {
  #IsDependency(isDependencySpec: {dependentPackage: $package, versionRange: $version}) {
    #...allIsDependencyTree
  #}
#}

query QueryIsDependency($isDependencySpec: IsDependencySpec!) {
    IsDependency( isDependencySpec: $isDependencySpec) {
      ...allIsDependencyTree
    }
}

mutation IngestDependency(
  $pkg: PkgInputSpec!,
  $depPkg: PkgInputSpec!,
  $depPkgMatchType: MatchFlags!,
  $dependency: IsDependencyInputSpec!
) {
  ingestDependency(
    pkg: $pkg,
    depPkg: $depPkg,
    depPkgMatchType: $depPkgMatchType,
    dependency: $dependency) {
    id
  }
}

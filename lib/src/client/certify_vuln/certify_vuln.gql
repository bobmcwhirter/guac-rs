fragment allCertifyVulnTree on CertifyVuln {
    id
    package {
        id
        type
        namespaces {
            id
            namespace
            names {
                id
                name
                versions {
                    id
                    version
                    qualifiers {
                        key
                        value
                    }
                    subpath
                }
            }
        }
    }
    vulnerability {
        id
        type
        vulnerabilityIDs {
            id
            vulnerabilityID
        }
    }
    metadata {
        dbUri
        dbVersion
        scannerUri
        scannerVersion
        timeScanned
        origin
        collector
    }
}

query CertifyVulnQ1 {
    CertifyVuln(certifyVulnSpec: {}) {
        ...allCertifyVulnTree
    }
}

mutation IngestCertifyVuln($package: PkgInputSpec!, $vulnerability: VulnerabilityInputSpec!, $meta: ScanMetadataInput!) {
    ingestCertifyVuln(
        pkg: $package
        vulnerability: $vulnerability
        certifyVuln: $meta
    )  {
        id
    }
}

query QueryCertifyVulnByPackage($package: PkgSpec) {
    CertifyVuln(certifyVulnSpec: {package: $package}) {
        ...allCertifyVulnTree
    }
}

query QueryCertifyVulnById($id: String!) {
    CertifyVuln(certifyVulnSpec: {vulnerability: { vulnerabilityID: $id}}) {
        ...allCertifyVulnTree
    }
}

{
  "data": {
    "__schema": {
      "directives": [
        {
          "args": [
            {
              "defaultValue": "\"No longer supported\"",
              "description": null,
              "name": "reason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "description": "The @deprecated built-in directive is used within the type system definition language to indicate deprecated portions of a GraphQL service's schema, such as deprecated fields on a type, arguments on a field, input fields on an input type, or values of an enum type.",
          "locations": [
            "FIELD_DEFINITION",
            "ARGUMENT_DEFINITION",
            "INPUT_FIELD_DEFINITION",
            "ENUM_VALUE"
          ],
          "name": "deprecated"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": null,
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "The @include directive may be provided for fields, fragment spreads, and inline fragments, and allows for conditional inclusion during execution as described by the if argument.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "include"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": null,
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "The @skip directive may be provided for fields, fragment spreads, and inline fragments, and allows for conditional exclusion during execution as described by the if argument.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "skip"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": null,
              "name": "url",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "description": "The @specifiedBy built-in directive is used within the type system definition language to provide a scalar specification URL for specifying the behavior of custom scalar types.",
          "locations": [
            "SCALAR"
          ],
          "name": "specifiedBy"
        }
      ],
      "mutationType": {
        "name": "Mutation"
      },
      "queryType": {
        "name": "Query"
      },
      "subscriptionType": null,
      "types": [
        {
          "description": "Artifact represents the artifact and contains a digest field\n\nBoth field are mandatory and canonicalized to be lowercase.\n\nIf having a `checksum` Go object, `algorithm` can be\n`strings.ToLower(string(checksum.Algorithm))` and `digest` can be\n`checksum.Value`.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "algorithm",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "digest",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Artifact",
          "possibleTypes": []
        },
        {
          "description": "ArtifactInputSpec is the same as Artifact, but used as mutation input.\n\nBoth arguments will be canonicalized to lowercase.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "algorithm",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "digest",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ArtifactInputSpec",
          "possibleTypes": []
        },
        {
          "description": "ArtifactSpec allows filtering the list of artifacts to return.\n\nBoth arguments will be canonicalized to lowercase.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "algorithm",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "digest",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ArtifactSpec",
          "possibleTypes": []
        },
        {
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Boolean",
          "possibleTypes": []
        },
        {
          "description": "Builder represents the builder such as (FRSCA or github actions).\n\nCurrently builders are identified by the `uri` field, which is mandatory.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "uri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Builder",
          "possibleTypes": []
        },
        {
          "description": "BuilderInputSpec is the same as Builder, but used for mutation ingestion.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "uri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "BuilderInputSpec",
          "possibleTypes": []
        },
        {
          "description": "BuilderSpec allows filtering the list of builders to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "uri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "BuilderSpec",
          "possibleTypes": []
        },
        {
          "description": "CVE represents common vulnerabilities and exposures. It contains the year along\nwith the CVE ID.\n\nThe `year` is mandatory.\nThe `cveId` field is mandatory and canonicalized to be lowercase.\n\nThis node can be referred to by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "year",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "cveId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CVE",
          "possibleTypes": []
        },
        {
          "description": "CVEInputSpec is the same as CVESpec, but used for mutation ingestion.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "year",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "cveId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CVEInputSpec",
          "possibleTypes": []
        },
        {
          "description": "CVESpec allows filtering the list of cves to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "year",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "cveId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CVESpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyBad is an attestation represents when a package, source or artifact is considered bad\n\nsubject - union type that can be either a package, source or artifact object type\njustification (property) - string value representing why the subject is considered bad\norigin (property) - where this attestation was generated from (based on which document)\ncollector (property) - the GUAC collector that collected the document that generated this attestation\n\nNote: Attestation must occur at the PackageName or the PackageVersion or at the SourceName.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageSourceOrArtifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyBad",
          "possibleTypes": []
        },
        {
          "description": "CertifyBadInputSpec is the same as CertifyBad but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyBadInputSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyBadSpec allows filtering the list of CertifyBad to return.\nNote: Package, Source or artifact must be specified but not at the same time\nFor package - a PackageName or PackageVersion must be specified (name or name, version, qualifiers and subpath)\nFor source - a SourceName must be specified (name, tag or commit)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageSourceOrArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyBadSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyGood is an attestation represents when a package, source or artifact is considered good\n\nsubject - union type that can be either a package, source or artifact object type\njustification (property) - string value representing why the subject is considered good\norigin (property) - where this attestation was generated from (based on which document)\ncollector (property) - the GUAC collector that collected the document that generated this attestation\n\nNote: Attestation must occur at the PackageName or the PackageVersion or at the SourceName.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageSourceOrArtifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyGood",
          "possibleTypes": []
        },
        {
          "description": "CertifyGoodInputSpec is the same as CertifyGood but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyGoodInputSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyGoodSpec allows filtering the list of CertifyGood to return.\nNote: Package, Source or artifact must be specified but not at the same time\nFor package - a PackageName or PackageVersion must be specified (name or name, version, qualifiers and subpath)\nFor source - a SourceName must be specified (name, tag or commit)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageSourceOrArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyGoodSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyScorecard is an attestation which represents the scorecard of a\nparticular source repository.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The source repository that is being scanned (attestation subject)",
              "isDeprecated": false,
              "name": "source",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Source",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The Scorecard attached to the repository (attestation object)",
              "isDeprecated": false,
              "name": "scorecard",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Scorecard",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyScorecard",
          "possibleTypes": []
        },
        {
          "description": "CertifyScorecardSpec allows filtering the list of CertifyScorecard to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "aggregateScore",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "checks",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ScorecardCheckSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scorecardVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scorecardCommit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyScorecardSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyVEXStatement is an attestation that represents when a package or\nartifact has a VEX about a specific vulnerability (CVE, GHSA or OSV).",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Subject of attestation",
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageOrArtifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Attested vulnerability",
              "isDeprecated": false,
              "name": "vulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "Vulnerability",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "status of the vulnerabilities with respect to the products and components listed in the statement",
              "isDeprecated": false,
              "name": "status",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "VexStatus",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Justification for VEX",
              "isDeprecated": false,
              "name": "vexJustification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "VexJustification",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "impact_statement or action_statement depending on the status filed",
              "isDeprecated": false,
              "name": "statement",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "statusNotes may convey information about how status was determined",
              "isDeprecated": false,
              "name": "statusNotes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Timestamp (exact time in RFC 3339 format) for the VEX statement",
              "isDeprecated": false,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyVEXStatement",
          "possibleTypes": []
        },
        {
          "description": "CertifyVEXStatementSpec allows filtering the list of CertifyVEXStatement to\nreturn.\n\nOnly one subject type (package or artifact) and one vulnerability type (CVE,\nGHSA or OSV) may be specified.\n\nNote that setting `noVuln` in VulnerabilitySpec is invalid for VEX statements!",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageOrArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vulnerability",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "VulnerabilitySpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "status",
              "type": {
                "kind": "ENUM",
                "name": "VexStatus",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vexJustification",
              "type": {
                "kind": "ENUM",
                "name": "VexJustification",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statement",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statusNotes",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyVEXStatementSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyVuln is an attestation that represents when a package has a\nvulnerability (OSV, CVE, or GHSA) or the special NoVuln value to attest that at\nthe time of scanning no vulnerability was found.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The package that is attested",
              "isDeprecated": false,
              "name": "package",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The vulnerability object. Can be an OSV, CVE, or GHSA or the special NoVuln node.",
              "isDeprecated": false,
              "name": "vulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "Vulnerability",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Metadata attached to the certification",
              "isDeprecated": false,
              "name": "metadata",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "VulnerabilityMetaData",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyVuln",
          "possibleTypes": []
        },
        {
          "description": "CertifyVulnSpec allows filtering the list of CertifyVuln to return.\n\nSpecifying just the package allows to query for all vulnerabilities associated\nwith the package.\n\nOnly one vulnerability type (OSV, CVE, GHSA, or special NoVuln) may be specified.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vulnerability",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "VulnerabilitySpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dbUri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dbVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scannerUri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scannerVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyVulnSpec",
          "possibleTypes": []
        },
        {
          "description": "CveOrGhsa is a union of CVE and GHSA.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "CveOrGhsa",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "CVE",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "GHSA",
              "ofType": null
            }
          ]
        },
        {
          "description": "CveOrGhsaInput allows using CveOrGhsa union as\ninput type to be used in mutations.\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "cve",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CVEInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ghsa",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GHSAInputSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CveOrGhsaInput",
          "possibleTypes": []
        },
        {
          "description": "CveOrGhsaSpec allows using CveOrGhsa union as\ninput type to be used in read queries.\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "cve",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CVESpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ghsa",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GHSASpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CveOrGhsaSpec",
          "possibleTypes": []
        },
        {
          "description": "Edge allows filtering path/neighbors output to only contain a subset of all\npossible GUAC links.\n\nEach member of the enum is formed by merging two Node names with _. Each name\nis converted from CamelCase to CAPITALS_WITH_UNDERSCORES. Only valid edges\n(pairs from Node to Node) are included.\n\nThe only exception to the above rule is for links out of HasSLSA. The names are\nHAS_SLSA_SUBJECT, HAS_SLSA_BUILT_BY, and HAS_SLSA_MATERIALS. This is because\nARTIFACT_HAS_SLSA is only from subject Artifact to HasSLSA.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_CERTIFY_BAD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_CERTIFY_GOOD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_CERTIFY_VEX_STATEMENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_HASH_EQUAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_HAS_SLSA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_IS_OCCURRENCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "BUILDER_HAS_SLSA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CVE_CERTIFY_VEX_STATEMENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CVE_CERTIFY_VULN"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CVE_IS_VULNERABILITY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "GHSA_CERTIFY_VEX_STATEMENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "GHSA_CERTIFY_VULN"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "GHSA_IS_VULNERABILITY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NO_VULN_CERTIFY_VULN"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "OSV_CERTIFY_VEX_STATEMENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "OSV_CERTIFY_VULN"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "OSV_IS_VULNERABILITY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_CERTIFY_BAD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_CERTIFY_GOOD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_CERTIFY_VEX_STATEMENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_CERTIFY_VULN"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_HAS_SBOM"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_HAS_SOURCE_AT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_IS_DEPENDENCY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_IS_OCCURRENCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_PKG_EQUAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_CERTIFY_BAD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_CERTIFY_GOOD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_CERTIFY_SCORECARD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_HAS_SBOM"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_HAS_SOURCE_AT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_IS_OCCURRENCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_BAD_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_BAD_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_BAD_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_GOOD_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_GOOD_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_GOOD_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_SCORECARD_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VEX_STATEMENT_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VEX_STATEMENT_CVE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VEX_STATEMENT_GHSA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VEX_STATEMENT_OSV"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VEX_STATEMENT_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VULN_CVE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VULN_GHSA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VULN_NO_VULN"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VULN_OSV"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VULN_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HASH_EQUAL_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SBOM_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SBOM_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SLSA_BUILT_BY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SLSA_MATERIALS"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SLSA_SUBJECT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SOURCE_AT_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SOURCE_AT_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_DEPENDENCY_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_OCCURRENCE_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_OCCURRENCE_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_OCCURRENCE_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_VULNERABILITY_CVE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_VULNERABILITY_GHSA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_VULNERABILITY_OSV"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PKG_EQUAL_PACKAGE"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "Edge",
          "possibleTypes": []
        },
        {
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Float",
          "possibleTypes": []
        },
        {
          "description": "GHSA represents GitHub security advisories.\n\nThe `id` field is mandatory and canonicalized to be lowercase.\n\nThis node can be referred to by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ghsaId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "GHSA",
          "possibleTypes": []
        },
        {
          "description": "GHSAInputSpec is the same as GHSASpec, but used for mutation ingestion.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "ghsaId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "GHSAInputSpec",
          "possibleTypes": []
        },
        {
          "description": "GHSASpec allows filtering the list of GHSA to return.\n\nThe argument will be canonicalized to lowercase.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ghsaId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "GHSASpec",
          "possibleTypes": []
        },
        {
          "description": "HasSBOM is an attestation represents that a package object or source object has an SBOM associated with a uri\n\nsubject - union type that can be either a package or source object type\nuri (property) - identifier string for the SBOM\norigin (property) - where this attestation was generated from (based on which document)\ncollector (property) - the GUAC collector that collected the document that generated this attestation\n\nNote: Only package object or source object can be defined. Not both.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageOrSource",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "uri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "annotation",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HasSBOM",
          "possibleTypes": []
        },
        {
          "description": "HasSBOMInputSpec is the same as HasSBOM but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "uri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "annotation",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSBOMInputSpec",
          "possibleTypes": []
        },
        {
          "description": "HashEqualSpec allows filtering the list of HasSBOM to return.\n\nOnly the package or source can be added, not both. HasSourceAt will be used to create the package to source\nrelationship.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageOrSourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "uri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "annotation",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSBOMSpec",
          "possibleTypes": []
        },
        {
          "description": "HasSLSA records that a subject node has a SLSA attestation.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The subject of SLSA attestation: package, source, or artifact.",
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Artifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The SLSA attestation.",
              "isDeprecated": false,
              "name": "slsa",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "SLSA",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HasSLSA",
          "possibleTypes": []
        },
        {
          "description": "HasSLSASpec allows filtering the list of HasSLSA to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "builtFrom",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ArtifactSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "builtBy",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BuilderSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "buildType",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "predicate",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "SLSAPredicateSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "slsaVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "startedOn",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "finishedOn",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSLSASpec",
          "possibleTypes": []
        },
        {
          "description": "HasSourceAt is an attestation represents that a package object has a source object since a timestamp\n\npackage (subject) - the package object type that represents the package\nsource (object) - the source object type that represents the source\nknownSince (property) - timestamp when this was last checked (exact time)\njustification (property) - string value representing why the package has a source specified\norigin (property) - where this attestation was generated from (based on which document)\ncollector (property) - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "package",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "source",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Source",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HasSourceAt",
          "possibleTypes": []
        },
        {
          "description": "HasSourceAtInputSpec is the same as HasSourceAt but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSourceAtInputSpec",
          "possibleTypes": []
        },
        {
          "description": "HasSourceAtSpec allows filtering the list of HasSourceAt to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSourceAtSpec",
          "possibleTypes": []
        },
        {
          "description": "HashEqual is an attestation that represents when two artifact hash are similar based on a justification.\n\nartifacts (subject) - the artifacts (represented by algorithm and digest) that are equal\njustification (property) - string value representing why the artifacts are the equal\norigin (property) - where this attestation was generated from (based on which document)\ncollector (property) - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "artifacts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HashEqual",
          "possibleTypes": []
        },
        {
          "description": "HashEqualInputSpec is the same as HashEqual but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HashEqualInputSpec",
          "possibleTypes": []
        },
        {
          "description": "HashEqualSpec allows filtering the list of HashEqual to return.\n\nSpecifying just the artifacts allows to query for all equivalent artifacts (if they exist)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifacts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ArtifactSpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HashEqualSpec",
          "possibleTypes": []
        },
        {
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as \"4\") or integer (such as 4) input value will be accepted as an ID.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "ID",
          "possibleTypes": []
        },
        {
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Int",
          "possibleTypes": []
        },
        {
          "description": "IsDependency is an attestation that represents when a package is dependent on another package\n\npackage (subject) - the package object type that represents the package\ndependentPackage (object) - the package object type that represents the packageName (cannot be to the packageVersion)\nversionRange (property) - string value for version range that applies to the dependent package\njustification (property) - string value representing why the artifacts are the equal\norigin (property) - where this attestation was generated from (based on which document)\ncollector (property) - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "package",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "dependentPackage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "versionRange",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "IsDependency",
          "possibleTypes": []
        },
        {
          "description": "IsDependencyInputSpec is the same as IsDependency but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "versionRange",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsDependencyInputSpec",
          "possibleTypes": []
        },
        {
          "description": "IsDependencySpec allows filtering the list of IsDependency to return.\n\nNote: the package object must be defined to return its dependent packages.\nDependent Packages must represent the packageName (cannot be the packageVersion)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dependentPackage",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgNameSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "versionRange",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsDependencySpec",
          "possibleTypes": []
        },
        {
          "description": "IsOccurrence is an attestation represents when either a package or source is represented by an artifact\n\nNote: Package or Source must be specified but not both at the same time.\nAttestation must occur at the PackageVersion or at the SourceName.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "subject - union type that can be either a package or source object type",
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageOrSource",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "artifact (object) - artifact that represent the the package or source",
              "isDeprecated": false,
              "name": "artifact",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Artifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "justification (property) - string value representing why the package or source is represented by the specified artifact",
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "origin (property) - where this attestation was generated from (based on which document)",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "collector (property) - the GUAC collector that collected the document that generated this attestation",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "IsOccurrence",
          "possibleTypes": []
        },
        {
          "description": "IsOccurrenceInputSpec is the same as IsOccurrence but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsOccurrenceInputSpec",
          "possibleTypes": []
        },
        {
          "description": "IsOccurrenceSpec allows filtering the list of IsOccurrence to return.\nNote: Package or Source must be specified but not both at the same time\nFor package - PackageVersion must be specified (version, qualifiers and subpath)\nor it defaults to empty string for version, subpath and empty list for qualifiers\nFor source - a SourceName must be specified (name, tag or commit)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageOrSourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsOccurrenceSpec",
          "possibleTypes": []
        },
        {
          "description": "IsVulnerability is an attestation that represents when an OSV ID represents a CVE or GHSA\n\nosv (subject) - the osv object type that represents OSV and its ID\nvulnerability (object) - union type that consists of cve or ghsa\njustification (property) - the reason why the osv ID represents the cve or ghsa\norigin (property) - where this attestation was generated from (based on which document)\ncollector (property) - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "osv",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OSV",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "vulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "CveOrGhsa",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "IsVulnerability",
          "possibleTypes": []
        },
        {
          "description": "IsVulnerabilityInputSpec is the same as IsVulnerability but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsVulnerabilityInputSpec",
          "possibleTypes": []
        },
        {
          "description": "IsVulnerabilitySpec allows filtering the list of IsVulnerability to return.\nOnly CVE or GHSA can be specified at once.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "osv",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OSVSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vulnerability",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CveOrGhsaSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsVulnerabilitySpec",
          "possibleTypes": []
        },
        {
          "description": "MatchFlags is used to input the PkgMatchType enum.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "pkg",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PkgMatchType",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "MatchFlags",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifact",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ArtifactInputSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingest a new artifact. Returns the ingested artifact",
              "isDeprecated": false,
              "name": "ingestArtifact",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Artifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builder",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "BuilderInputSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingest a new builder. Returns the ingested builder",
              "isDeprecated": false,
              "name": "ingestBuilder",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Builder",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageSourceOrArtifactInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MatchFlags",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyBad",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyBadInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that a package, source or artifact is considered bad",
              "isDeprecated": false,
              "name": "ingestCertifyBad",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CertifyBad",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageSourceOrArtifactInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MatchFlags",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyGood",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyGoodInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that a package, source or artifact is considered good",
              "isDeprecated": false,
              "name": "ingestCertifyGood",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CertifyGood",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "source",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SourceInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "scorecard",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ScorecardInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Certifies the Scorecard scanning of a source repository",
              "isDeprecated": false,
              "name": "certifyScorecard",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CertifyScorecard",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrArtifactInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerability",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vexStatement",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VexStatementInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Certify that a package or an artifact has an associated VEX for a vulnerability.\n\nNote that setting `noVuln` in VulnerabilityInput is invalid for VEX statements!",
              "isDeprecated": false,
              "name": "ingestVEXStatement",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CertifyVEXStatement",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerability",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyVuln",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityMetaDataInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Certify that a package is vulnerable to a vulnerability (OSV, CVE or GHSA) or no vulnerability has been detected.",
              "isDeprecated": false,
              "name": "ingestVulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CertifyVuln",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "cve",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CVEInputSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingest a new CVE. Returns the ingested object",
              "isDeprecated": false,
              "name": "ingestCVE",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CVE",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "ghsa",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "GHSAInputSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingest a new GHSA. Returns the ingested object",
              "isDeprecated": false,
              "name": "ingestGHSA",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "GHSA",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrSourceInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSBOM",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HasSBOMInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Certifies that a package or a source has SBOM at the URI",
              "isDeprecated": false,
              "name": "ingestHasSBOM",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "HasSBOM",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ArtifactInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builtFrom",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ArtifactInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builtBy",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "BuilderInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "slsa",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SLSAInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingests a SLSA attestation.\n\nNote that materials and builder are extracted as separate arguments. This is\nbecause this ingestion method assumes that the subject and the materials are\nalready ingested and only creates the SLSA node.",
              "isDeprecated": false,
              "name": "ingestSLSA",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "HasSLSA",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "materials",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ArtifactInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingests a set of packages, sources, and artifacts.\n\nThis is a helper mutation for ingesting SLSA nodes. It should be more\nefficient to call this method to ingest a set materials instead of ingesting\nthem one by one.",
              "isDeprecated": false,
              "name": "ingestMaterials",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "source",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SourceInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSourceAt",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HasSourceAtInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that a package (either at the version level or package name level) is associated with the source",
              "isDeprecated": false,
              "name": "ingestHasSourceAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "HasSourceAt",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifact",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ArtifactInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "equalArtifact",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ArtifactInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hashEqual",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HashEqualInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "certify that two artifacts are the same (hashes are equal)",
              "isDeprecated": false,
              "name": "ingestHashEqual",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "HashEqual",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "depPkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "dependency",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "IsDependencyInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds dependency between two packages",
              "isDeprecated": false,
              "name": "ingestDependency",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IsDependency",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrSourceInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifact",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ArtifactInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "occurrence",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "IsOccurrenceInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds an artifact as an occurrence for either a package or a source",
              "isDeprecated": false,
              "name": "ingestOccurrence",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IsOccurrence",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "osv",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "OSVInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerability",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CveOrGhsaInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "isVulnerability",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "IsVulnerabilityInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "certify that a OSV is associated with either a CVE or GHSA",
              "isDeprecated": false,
              "name": "ingestIsVulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IsVulnerability",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "osv",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OSVInputSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingest a new OSV. Returns the ingested object",
              "isDeprecated": false,
              "name": "ingestOSV",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OSV",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingest a new package. Returns the ingested package trie",
              "isDeprecated": false,
              "name": "ingestPackage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "depPkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgEqual",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgEqualInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that two packages are similar",
              "isDeprecated": false,
              "name": "ingestPkgEqual",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PkgEqual",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "source",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SourceInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingest a new source. Returns the ingested source trie",
              "isDeprecated": false,
              "name": "ingestSource",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Source",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Mutation",
          "possibleTypes": []
        },
        {
          "description": "NoVuln is a special vulnerability node to attest that no vulnerability has been\nfound during a vulnerability scan.\n\nBackends guarantee that this is a singleton node.\n\nWe define an ID field due to GraphQL restrictions.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "NoVuln",
          "possibleTypes": []
        },
        {
          "description": "Node is a union type of all the possible nodes.\n\nIt encapsulates the software tree nodes along with the evidence nodes. In a\npath query, all connecting evidence nodes along with their intermediate subject\nnodes need to be returned in order to create a complete graph.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "Node",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Package",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Source",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Artifact",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Builder",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "OSV",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CVE",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "GHSA",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "NoVuln",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "IsOccurrence",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "IsDependency",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "IsVulnerability",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyVEXStatement",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HashEqual",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyBad",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyGood",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PkgEqual",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyScorecard",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyVuln",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HasSourceAt",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HasSBOM",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HasSLSA",
              "ofType": null
            }
          ]
        },
        {
          "description": "OSV represents an Open Source Vulnerability.\n\nThe `osvId` field is mandatory and canonicalized to be lowercase.\n\nThis maps to a vulnerability ID specific to the environment (e.g., GHSA ID or\nCVE ID).\n\nThis node can be referred to by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "osvId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "OSV",
          "possibleTypes": []
        },
        {
          "description": "OSVInputSpec is the same as OSVSpec, but used for mutation ingestion.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "osvId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "OSVInputSpec",
          "possibleTypes": []
        },
        {
          "description": "OSVSpec allows filtering the list of OSV to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "osvId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "OSVSpec",
          "possibleTypes": []
        },
        {
          "description": "Package represents a package.\n\nIn the pURL representation, each Package matches a `pkg:<type>` partial pURL.\nThe `type` field matches the pURL types but we might also use `\"guac\"` for the\ncases where the pURL representation is not complete or when we have custom\nrules.\n\nThis node is a singleton: backends guarantee that there is exactly one node\nwith the same `type` value.\n\nAlso note that this is named `Package`, not `PackageType`. This is only to make\nqueries more readable.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespaces",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageNamespace",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Package",
          "possibleTypes": []
        },
        {
          "description": "PackageName is a name for packages.\n\nIn the pURL representation, each PackageName matches the\n`pkg:<type>/<namespace>/<name>` pURL.\n\nNames are always mandatory.\n\nThis is the first node in the trie that can be referred to by other parts of\nGUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "versions",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageVersion",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageName",
          "possibleTypes": []
        },
        {
          "description": "PackageNamespace is a namespace for packages.\n\nIn the pURL representation, each PackageNamespace matches the\n`pkg:<type>/<namespace>/` partial pURL.\n\nNamespaces are optional and type specific. Because they are optional, we use\nempty string to denote missing namespaces.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespace",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "names",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageName",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageNamespace",
          "possibleTypes": []
        },
        {
          "description": "PackageOrArtifact is a union of Package and Artifact.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "PackageOrArtifact",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Package",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Artifact",
              "ofType": null
            }
          ]
        },
        {
          "description": "PackageOrArtifactInput allows using PackageOrArtifact union as\ninput type to be used in mutations.\n\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactInputSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageOrArtifactInput",
          "possibleTypes": []
        },
        {
          "description": "PackageOrArtifactSpec allows using PackageOrArtifact union as\ninput type to be used in read queries.\n\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageOrArtifactSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageOrSource is a union of Package and Source. Any of these objects can be specified",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "PackageOrSource",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Package",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Source",
              "ofType": null
            }
          ]
        },
        {
          "description": "PackageOrSourceInput allows using PackageOrSource union as\ninput type to be used in mutations.\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceInputSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageOrSourceInput",
          "possibleTypes": []
        },
        {
          "description": "PackageOrSourceSpec allows using PackageOrSource union as\ninput type to be used in read queries.\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageOrSourceSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageQualifier is a qualifier for a package, a key-value pair.\n\nIn the pURL representation, it is a part of the `<qualifiers>` part of the\n`pkg:<type>/<namespace>/<name>@<version>?<qualifiers>` pURL.\n\nQualifiers are optional, each Package type defines own rules for handling them,\nand multiple qualifiers could be attached to the same package.\n\nThis node cannot be directly referred by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageQualifier",
          "possibleTypes": []
        },
        {
          "description": "PackageQualifierInputSpec is the same as PackageQualifier, but usable as\nmutation input.\n\nGraphQL does not allow input types to contain composite types and does not allow\ncomposite types to contain input types. So, although in this case these two\ntypes are semantically the same, we have to duplicate the definition.\n\nBoth fields are mandatory.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageQualifierInputSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageQualifierSpec is the same as PackageQualifier, but usable as query\ninput.\n\nGraphQL does not allow input types to contain composite types and does not allow\ncomposite types to contain input types. So, although in this case these two\ntypes are semantically the same, we have to duplicate the definition.\n\nKeys are mandatory, but values could also be `null` if we want to match all\nvalues for a specific key.\n\nTODO(mihaimaruseac): Formalize empty vs null when the schema is fully done",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageQualifierSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageSourceOrArtifact is a union of Package, Source, and Artifact.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "PackageSourceOrArtifact",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Package",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Source",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Artifact",
              "ofType": null
            }
          ]
        },
        {
          "description": "PackageSourceOrArtifactInput allows using PackageSourceOrArtifact union as\ninput type to be used in mutations.\n\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactInputSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageSourceOrArtifactInput",
          "possibleTypes": []
        },
        {
          "description": "PackageSourceOrArtifactSpec allows using PackageSourceOrArtifact union as\ninput type to be used in read queries.\n\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageSourceOrArtifactSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageVersion is a package version.\n\nIn the pURL representation, each PackageName matches the\n`pkg:<type>/<namespace>/<name>@<version>` pURL.\n\nVersions are optional and each Package type defines own rules for handling them.\nFor this level of GUAC, these are just opaque strings.\n\nThis node can be referred to by other parts of GUAC.\n\nSubpath and qualifiers are optional. Lack of qualifiers is represented by an\nempty list and lack of subpath by empty string (to be consistent with\noptionality of namespace and version). Two nodes that have different qualifiers\nand/or subpath but the same version mean two different packages in the trie\n(they are different). Two nodes that have same version but qualifiers of one are\na subset of the qualifier of the other also mean two different packages in the\ntrie.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "version",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "qualifiers",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageQualifier",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subpath",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageVersion",
          "possibleTypes": []
        },
        {
          "description": "PkgEqual is an attestation that represents when a package objects are similar\n\npackages (subject) - list of package objects\njustification (property) - string value representing why the packages are similar\norigin (property) - where this attestation was generated from (based on which document)\ncollector (property) - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "packages",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Package",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PkgEqual",
          "possibleTypes": []
        },
        {
          "description": "PkgEqualInputSpec is the same as PkgEqual but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgEqualInputSpec",
          "possibleTypes": []
        },
        {
          "description": "PkgEqualSpec allows filtering the list of PkgEqual to return.\n\nSpecifying just the package allows to query for all similar packages (if they exist)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "packages",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PkgSpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgEqualSpec",
          "possibleTypes": []
        },
        {
          "description": "PkgInputSpec specifies a package for a mutation.\n\nThis is different than PkgSpec because we want to encode mandatory fields:\n`type` and `name`. All optional fields are given empty default values.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "version",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "qualifiers",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PackageQualifierInputSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "subpath",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgInputSpec",
          "possibleTypes": []
        },
        {
          "description": "PkgMatchType is an enum to determine if the attestation should be done at the\nspecific version or package name",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ALL_VERSIONS"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SPECIFIC_VERSION"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "PkgMatchType",
          "possibleTypes": []
        },
        {
          "description": "PkgNameSpec is used for IsDependency to input dependent packages. This is different from PkgSpec\nas the IsDependency attestation should only be allowed to be made to the packageName node and not the\npackageVersion node. Versions will be handled by the version_range in the IsDependency attestation node.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgNameSpec",
          "possibleTypes": []
        },
        {
          "description": "PkgSpec allows filtering the list of packages to return.\n\nEach field matches a qualifier from pURL. Use `null` to match on all values at\nthat level. For example, to get all packages in GUAC backend, use a PkgSpec\nwhere every field is `null`.\n\nEmpty string at a field means matching with the empty string. If passing in\nqualifiers, all of the values in the list must match. Since we want to return\nnodes with any number of qualifiers if no qualifiers are passed in the input, we\nmust also return the same set of nodes it the qualifiers list is empty. To match\non nodes that don't contain any qualifier, set `matchOnlyEmptyQualifiers` to\ntrue. If this field is true, then the qualifiers argument is ignored.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "version",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "qualifiers",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PackageQualifierSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": "false",
              "description": null,
              "name": "matchOnlyEmptyQualifiers",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subpath",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgSpec",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifactSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ArtifactSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all artifacts",
              "isDeprecated": false,
              "name": "artifacts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builderSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "BuilderSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all builders",
              "isDeprecated": false,
              "name": "builders",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Builder",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyBadSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CertifyBadSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all CertifyBad",
              "isDeprecated": false,
              "name": "CertifyBad",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyBad",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyGoodSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CertifyGoodSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all CertifyGood",
              "isDeprecated": false,
              "name": "CertifyGood",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyGood",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "scorecardSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CertifyScorecardSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all Scorecard certifications matching the filter",
              "isDeprecated": false,
              "name": "scorecards",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyScorecard",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyVEXStatementSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CertifyVEXStatementSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all CertifyVEXStatement.",
              "isDeprecated": false,
              "name": "CertifyVEXStatement",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyVEXStatement",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyVulnSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CertifyVulnSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all vulnerability certifications matching the input filter.",
              "isDeprecated": false,
              "name": "CertifyVuln",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyVuln",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "cveSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CVESpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all CVEs",
              "isDeprecated": false,
              "name": "cve",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CVE",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "ghsaSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "GHSASpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all GHSA nodes",
              "isDeprecated": false,
              "name": "ghsa",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "GHSA",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSBOMSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "HasSBOMSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all HasSBOM",
              "isDeprecated": false,
              "name": "HasSBOM",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasSBOM",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSLSASpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "HasSLSASpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all SLSA attestations matching the filter",
              "isDeprecated": false,
              "name": "HasSLSA",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasSLSA",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSourceAtSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "HasSourceAtSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all HasSourceAt",
              "isDeprecated": false,
              "name": "HasSourceAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasSourceAt",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hashEqualSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "HashEqualSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all HashEqual",
              "isDeprecated": false,
              "name": "HashEqual",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HashEqual",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "isDependencySpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "IsDependencySpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all IsDependency",
              "isDeprecated": false,
              "name": "IsDependency",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "IsDependency",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "isOccurrenceSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "IsOccurrenceSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all IsOccurrence",
              "isDeprecated": false,
              "name": "IsOccurrence",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "IsOccurrence",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "isVulnerabilitySpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "IsVulnerabilitySpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all IsVulnerability",
              "isDeprecated": false,
              "name": "IsVulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "IsVulnerability",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "osvSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OSVSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all OSV",
              "isDeprecated": false,
              "name": "osv",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "OSV",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PkgSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all packages",
              "isDeprecated": false,
              "name": "packages",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Package",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "target",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxPathLength",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "usingOnly",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "ENUM",
                          "name": "Edge",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "path query returns a path between subject and target, of a maximum length\n\nSince we want to uniquely identify endpoints, nodes must be specified by\nvalid IDs only (instead of using filters/input spec structs).\n\nSpecifying any Edge value in `usingOnly` will make the path only contain the\ncorresponding GUAC evidence trees (GUAC verbs).",
              "isDeprecated": false,
              "name": "path",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "UNION",
                      "name": "Node",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "node",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "usingOnly",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "ENUM",
                          "name": "Edge",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "neighbors returns all the direct neighbors of a node\n\nSimilarly, the input is only specified by its ID.\n\nSpecifying any Edge value in `usingOnly` will make the neighbors list only\ncontain the corresponding GUAC evidence trees (GUAC verbs).",
              "isDeprecated": false,
              "name": "neighbors",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "UNION",
                      "name": "Node",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "node",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "node returns a single node, regardless of type\n\nThe input is only specified by its ID.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "Node",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgEqualSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PkgEqualSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all PkgEqual",
              "isDeprecated": false,
              "name": "PkgEqual",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PkgEqual",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "sourceSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "SourceSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all sources",
              "isDeprecated": false,
              "name": "sources",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Source",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Query",
          "possibleTypes": []
        },
        {
          "description": "SLSA contains all of the fields present in a SLSA attestation.\n\nThe materials and builders are objects of the HasSLSA predicate, everything\nelse are properties extracted from the attestation.\n\nWe also include fields to specify under what conditions the check was performed\n(time of scan, version of scanners, etc.) as well as how this information got\nincluded into GUAC (origin document and the collector for that document).",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Sources of the build resulting in subject (materials)",
              "isDeprecated": false,
              "name": "builtFrom",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Builder performing the build",
              "isDeprecated": false,
              "name": "builtBy",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Builder",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Type of the builder",
              "isDeprecated": false,
              "name": "buildType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Individual predicates found in the attestation",
              "isDeprecated": false,
              "name": "slsaPredicate",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SLSAPredicate",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Version of the SLSA predicate",
              "isDeprecated": false,
              "name": "slsaVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Timestamp (RFC3339Nano format) of build start time",
              "isDeprecated": false,
              "name": "startedOn",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Timestamp (RFC3339Nano format) of build end time",
              "isDeprecated": false,
              "name": "finishedOn",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SLSA",
          "possibleTypes": []
        },
        {
          "description": "SLSAInputSpec is the same as SLSA but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "buildType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "slsaPredicate",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SLSAPredicateInputSpec",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "slsaVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "startedOn",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "finishedOn",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SLSAInputSpec",
          "possibleTypes": []
        },
        {
          "description": "SLSAPredicate are the values from the SLSA predicate in key-value pair form.\n\nFor example, given the following predicate\n\n```\n\"predicate\": {\n  \"buildDefinition\": {\n    \"externalParameters\": {\n      \"repository\": \"https://github.com/octocat/hello-world\",\n      ...\n    },\n    ...\n  },\n  ...\n}\n```\n\nwe have\n\n```\nkey   = \"buildDefinition.externalParameters.repository\"\nvalue = \"https://github.com/octocat/hello-world\"\n```\n\nThis node cannot be directly referred by other parts of GUAC.\n\nTODO(mihaimaruseac): Can we define these directly?",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SLSAPredicate",
          "possibleTypes": []
        },
        {
          "description": "SLSAPredicateInputSpec is the same as SLSAPredicateSpec, but for mutation\ninput.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SLSAPredicateInputSpec",
          "possibleTypes": []
        },
        {
          "description": "SLSAPredicateSpec is the same as SLSAPredicate, but usable as query input.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SLSAPredicateSpec",
          "possibleTypes": []
        },
        {
          "description": "Scorecard contains all of the fields present in a Scorecard attestation.\n\nWe also include fields to specify under what conditions the check was performed\n(time of scan, version of scanners, etc.) as well as how this information got\nincluded into GUAC (origin document and the collector for that document).",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Individual Scorecard check scores (Branch-Protection, Code-Review, ...)",
              "isDeprecated": false,
              "name": "checks",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ScorecardCheck",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Overall Scorecard score for the source",
              "isDeprecated": false,
              "name": "aggregateScore",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Exact timestamp when the source was last scanned (in RFC 3339 format)",
              "isDeprecated": false,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Version of the Scorecard scanner used to analyze the source",
              "isDeprecated": false,
              "name": "scorecardVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Commit of the Scorecards repository at the time of scanning the source",
              "isDeprecated": false,
              "name": "scorecardCommit",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Scorecard",
          "possibleTypes": []
        },
        {
          "description": "ScorecardCheck are the individual checks from scorecard and their values as a\nkey-value pair.\n\nFor example:  Branch-Protection, Code-Review...etc\n\nBased off scorecard's:\ntype jsonCheckResultV2 struct {\n  Details []string                 `json:\"details\"`\n  Score   int                      `json:\"score\"`\n  Reason  string                   `json:\"reason\"`\n  Name    string                   `json:\"name\"`\n  Doc     jsonCheckDocumentationV2 `json:\"documentation\"`\n}\nThis node cannot be directly referred by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "check",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "score",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "ScorecardCheck",
          "possibleTypes": []
        },
        {
          "description": "ScorecardCheckInputSpec is the same as ScorecardCheck, but for mutation input.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "check",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "score",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ScorecardCheckInputSpec",
          "possibleTypes": []
        },
        {
          "description": "ScorecardCheckSpec is the same as ScorecardCheck, but usable as query input.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "check",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "score",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ScorecardCheckSpec",
          "possibleTypes": []
        },
        {
          "description": "ScorecardInputSpec is the same as Scorecard but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "checks",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ScorecardCheckInputSpec",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "aggregateScore",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scorecardVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scorecardCommit",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ScorecardInputSpec",
          "possibleTypes": []
        },
        {
          "description": "Source represents a source.\n\nThis can be the version control system that is being used.\n\nThis node is a singleton: backends guarantee that there is exactly one node\nwith the same `type` value.\n\nAlso note that this is named `Source`, not `SourceType`. This is only to make\nqueries more readable.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespaces",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SourceNamespace",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Source",
          "possibleTypes": []
        },
        {
          "description": "SourceInputSpec specifies a source for a mutation.\n\nThis is different than SourceSpec because we want to encode that all fields\nexcept tag and commit are mandatory fields. All optional fields are given\nempty default values.\n\nIt is an error to set both `tag` and `commit` fields to values different than\nthe default.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "tag",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "commit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SourceInputSpec",
          "possibleTypes": []
        },
        {
          "description": "SourceName is a url of the repository and its tag or commit.\n\nThe `name` field is mandatory. The `tag` and `commit` fields are optional, but\nit is an error to specify both.\n\nThis is the only source trie node that can be referenced by other parts of\nGUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "tag",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "commit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SourceName",
          "possibleTypes": []
        },
        {
          "description": "SourceNamespace is a namespace for sources.\n\nThis is the location of the repository (such as github/gitlab/bitbucket).\n\nThe `namespace` field is mandatory.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespace",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "names",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SourceName",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SourceNamespace",
          "possibleTypes": []
        },
        {
          "description": "SourceSpec allows filtering the list of sources to return.\n\nEmpty string at a field means matching with the empty string. Missing field\nmeans retrieving all possible matches.\n\nIt is an error to specify both `tag` and `commit` fields, except it both are\nset as empty string (in which case the returned sources are only those for\nwhich there is no tag/commit information).",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "tag",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "commit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SourceSpec",
          "possibleTypes": []
        },
        {
          "description": "The `String`scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "String",
          "possibleTypes": []
        },
        {
          "description": "Define the Time scalar, to be used across GUAC. It follows RFC3339Nano format.\n\nThis is implicit via https://gqlgen.com/reference/scalars/#time\n\nFor GUAC, we assume that all times are stored in UTC format.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Time",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "COMPONENT_NOT_PRESENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULNERABLE_CODE_NOT_PRESENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULNERABLE_CODE_NOT_IN_EXECUTE_PATH"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULNERABLE_CODE_CANNOT_BE_CONTROLLED_BY_ADVERSARY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "INLINE_MITIGATIONS_ALREADY_EXIST"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NOT_PROVIDED"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "VexJustification",
          "possibleTypes": []
        },
        {
          "description": "VexStatementInputSpec is the same as CertifyVEXStatement but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "status",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "VexStatus",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vexJustification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "VexJustification",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statement",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statusNotes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VexStatementInputSpec",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NOT_AFFECTED"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "AFFECTED"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "FIXED"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "UNDER_INVESTIGATION"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "VexStatus",
          "possibleTypes": []
        },
        {
          "description": "Vulnerability is a union of OSV, CVE, GHSA or the NoVuln node.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "Vulnerability",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "OSV",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CVE",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "GHSA",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "NoVuln",
              "ofType": null
            }
          ]
        },
        {
          "description": "VulnerabilityInput allows using Vulnerability union as\ninput type to be used in mutations.\n\nEither `noVuln` must be set to true or one of `osv`, `cve`, or `ghsa` must be\nset to non-nil. If `noVuln` is set then this is an ingestion of a known lack of\nvulnerabilities, so the special NoVuln node will be used by the backend.\nOtherwise, the specific vulnerability type will be linked to this attestation.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "osv",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OSVInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "cve",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CVEInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ghsa",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GHSAInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noVuln",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VulnerabilityInput",
          "possibleTypes": []
        },
        {
          "description": "VulnerabilityMetaData is the metadata attached to vulnerability certification.\n\nIt contains metadata about the scanner process that created the certification.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Time of scan (in RFC 3339 format)",
              "isDeprecated": false,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "URI of the vulnerability database used by the scanner",
              "isDeprecated": false,
              "name": "dbUri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Version of the vulnerability database used by the scanner",
              "isDeprecated": false,
              "name": "dbVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "URI of the scanner",
              "isDeprecated": false,
              "name": "scannerUri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Version of the scanner",
              "isDeprecated": false,
              "name": "scannerVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "VulnerabilityMetaData",
          "possibleTypes": []
        },
        {
          "description": "VulnerabilityInputSpec is the same as VulnerabilityMetaData but for mutation input.\n\nAll fields are required.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dbUri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dbVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scannerUri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scannerVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VulnerabilityMetaDataInput",
          "possibleTypes": []
        },
        {
          "description": "VulnerabilitySpec allows using Vulnerability union as input type to be used in\nread queries.\n\nEither `noVuln` must be set to true or exactly one of `osv`, `cve` or `ghsa`\nmust be set to non-nil. Setting `noVuln` to true means retrieving nodes where\nthere is no vulnerability attached (thus, the special NoVuln node). Setting one\nof the other fields means retrieving certifications for the corresponding\nvulnerability types.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "osv",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OSVSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "cve",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CVESpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ghsa",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GHSASpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noVuln",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VulnerabilitySpec",
          "possibleTypes": []
        }
      ]
    }
  }
}
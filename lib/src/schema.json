{
  "data": {
    "__schema": {
      "directives": [
        {
          "args": [
            {
              "defaultValue": "\"No longer supported\"",
              "description": null,
              "name": "reason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "description": "The @deprecated built-in directive is used within the type system definition language to indicate deprecated portions of a GraphQL service's schema, such as deprecated fields on a type, arguments on a field, input fields on an input type, or values of an enum type.",
          "locations": [
            "FIELD_DEFINITION",
            "ARGUMENT_DEFINITION",
            "INPUT_FIELD_DEFINITION",
            "ENUM_VALUE"
          ],
          "name": "deprecated"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": null,
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "The @include directive may be provided for fields, fragment spreads, and inline fragments, and allows for conditional inclusion during execution as described by the if argument.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "include"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": null,
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "The @skip directive may be provided for fields, fragment spreads, and inline fragments, and allows for conditional exclusion during execution as described by the if argument.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "skip"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": null,
              "name": "url",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "description": "The @specifiedBy built-in directive is used within the type system definition language to provide a scalar specification URL for specifying the behavior of custom scalar types.",
          "locations": [
            "SCALAR"
          ],
          "name": "specifiedBy"
        }
      ],
      "mutationType": {
        "name": "Mutation"
      },
      "queryType": {
        "name": "Query"
      },
      "subscriptionType": null,
      "types": [
        {
          "description": "Artifact represents the artifact and contains a digest field\n\nalgorithm is mandatory in the from strings.ToLower(string(checksum.Algorithm)) (sha256, sha1...etc)\ndigest is mandatory in the form checksum.Value.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "algorithm",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "digest",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Artifact",
          "possibleTypes": []
        },
        {
          "description": "ArtifactSpec allows filtering the list of artifacts to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "algorithm",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "digest",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ArtifactSpec",
          "possibleTypes": []
        },
        {
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Boolean",
          "possibleTypes": []
        },
        {
          "description": "Builder represents the builder such as (FRSCA or github actions) and contains a uri field\n\nuri is mandatory and represents the specific builder.\n\nThis node is a singleton: backends guarantee that there is exactly one node with\nthe same `uri` value.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "uri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Builder",
          "possibleTypes": []
        },
        {
          "description": "BuilderSpec allows filtering the list of builders to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "uri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "BuilderSpec",
          "possibleTypes": []
        },
        {
          "description": "CVE represents common vulnerabilities and exposures. It contains the year along\nwith the CVE ID.\n\nyear is mandatory.\n\nThis node is a singleton: backends guarantee that there is exactly one node with\nthe same `year` value.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "year",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "cveId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CVEId",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CVE",
          "possibleTypes": []
        },
        {
          "description": "CVEId is the actual ID that is given to a specific vulnerability\n\nid field is mandatory.\n\nThis node can be referred to by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CVEId",
          "possibleTypes": []
        },
        {
          "description": "CVESpec allows filtering the list of cves to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "year",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "cveId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CVESpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyBad is an attestation represents when a package, source or artifact is considered bad\n\nSubject - union type that can be either a package, source or artifact object type\nJustification - string value representing why the subject is considered bad\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation\n\nNote: Attestation must occur at the PackageName or the PackageVersion or at the SourceName.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PkgSrcArtObject",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyBad",
          "possibleTypes": []
        },
        {
          "description": "CertifyBadSpec allows filtering the list of CertifyBad to return.\nNote: Package, Source or artifact must be specified but not at the same time\nFor package - a PackageName or PackageVersion must be specified (name or name, version, qualifiers and subpath)\nFor source - a SourceName must be specified (name, tag or commit)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyBadSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyPkg is an attestation that represents when a package objects are similar\n\nPackages - list of package objects\nJustification - string value representing why the packages are similar\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "packages",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Package",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyPkg",
          "possibleTypes": []
        },
        {
          "description": "CertifyPkgSpec allows filtering the list of CertifyPkg to return.\n\nSpecifying just the package allows to query for all similar packages (if they exist)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "packages",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PkgSpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyPkgSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyScorecard is an attestation represents the scorecard of a particular source\n\nSource - the source object type that represents the source\ntimeScanned - timestamp when this was last scanned (exact time)\naggregateScore - overall scorecard score for the source\nchecks - individual scorecard check scores (Branch-Protection, Code-Review...etc)\nscorecardVersion - version of the scorecard when the source was scanned\nscorecardCommit - commit of scorecard when the source was scanned\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "source",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Source",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "aggregateScore",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "checks",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ScorecardCheck",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "scorecardVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "scorecardCommit",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyScorecard",
          "possibleTypes": []
        },
        {
          "description": "CertifyScorecardSpec allows filtering the list of CertifyScorecard to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "aggregateScore",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "checks",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ScorecardCheckSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scorecardVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scorecardCommit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyScorecardSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyVuln is an attestation that represents when a package has a vulnerability\n\nPackage - the package object type that represents the package\nvulnerability - union type that consists of osv, cve or ghsa\ntimeScanned - timestamp of when the package was last scanned\ndbUri - scanner vulnerability database uri\ndbVersion - scanner vulnerability database version\nscannerUri - vulnerability scanner's uri \nscannerVersion - vulnerability scanner version\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "package",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "vulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "OsvCveGhsaObject",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "dbUri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "dbVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "scannerUri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "scannerVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyVuln",
          "possibleTypes": []
        },
        {
          "description": "CertifyVulnSpec allows filtering the list of CertifyVuln to return.\n\nSpecifying just the package allows to query for all vulnerabilities associated with the package.\nOnly OSV, CVE or GHSA can be specified at once",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "osv",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OSVSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "cve",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CVESpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ghsa",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GHSASpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dbUri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dbVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scannerUri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scannerVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyVulnSpec",
          "possibleTypes": []
        },
        {
          "description": "CveGhsaObject is a union of CVE and GHSA.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "CveGhsaObject",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "CVE",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "GHSA",
              "ofType": null
            }
          ]
        },
        {
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Float",
          "possibleTypes": []
        },
        {
          "description": "GHSA represents github security advisory. It contains the ghsa ID (GHSA-pgvh-p3g4-86jw)",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ghsaId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "GHSAId",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "GHSA",
          "possibleTypes": []
        },
        {
          "description": "GHSAId is the actual ID that is given to a specific vulnerability on github\n\nid field is mandatory.\n\nThis node can be referred to by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "GHSAId",
          "possibleTypes": []
        },
        {
          "description": "GHSASpec allows filtering the list of ghsa to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "ghsaId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "GHSASpec",
          "possibleTypes": []
        },
        {
          "description": "HasSBOM is an attestation represents that a package object or source object has an SBOM associated with a uri\n\nSubject - union type that can be either a package or source object type\nPackage - the package object type that represents the package\nSource - the source object type that represents the source\nuri - identifier string for the SBOM\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation\n\nNote: Only package object or source object can be defined. Not both.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PkgSrcObject",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "uri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HasSBOM",
          "possibleTypes": []
        },
        {
          "description": "HashEqualSpec allows filtering the list of HasSBOM to return.\n\nOnly the package or source can be added, not both. HasSourceAt will be used to create the package to source\nrelationship. ",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "uri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSBOMSpec",
          "possibleTypes": []
        },
        {
          "description": "HasSLSA is an attestation represents that the subject has a SLSA attestation associated with it.\n\nSubject - an union type that consists of package, source or artifact\nBuiltFrom - list of union types that consists of the package, source or artifact that the subject was build from\nBuiltBy - represents the builder that was used to build the subject\nBuildType - individual scorecard check scores (Branch-Protection, Code-Review...etc)\nslsaPredicate - a list of key value pair that consist of the keys and values of the SLSA predicate\nSlsaVersion - version of the SLSA predicate\nStartedOn - timestamp when the SLSA predicate was recorded during the build time of the subject\nFinishedOn - timestamp when the SLSA predicate was completed during the build time of the subject\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PkgSrcArtObject",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "builtFrom",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "UNION",
                      "name": "PkgSrcArtObject",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "builtBy",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Builder",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "buildType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "slsaPredicate",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SLSAPredicate",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "slsaVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "startedOn",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "finishedOn",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HasSLSA",
          "possibleTypes": []
        },
        {
          "description": "HasSLSASpec allows filtering the list of HasSLSA to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "builtFromPackages",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PkgSpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "builtFromSource",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SourceSpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "builtFromArtifact",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ArtifactSpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "builtBy",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BuilderSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "buildType",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "predicate",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "SLSAPredicateSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "slsaVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "startedOn",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "finishedOn",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSLSASpec",
          "possibleTypes": []
        },
        {
          "description": "HasSourceAt is an attestation represents that a package object has a source object since a timestamp\n\nPackage - the package object type that represents the package\nSource - the source object type that represents the source\nKnownSince - timestamp when this was last checked (exact time)\nJustification - string value representing why the package has a source specified\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "package",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "source",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Source",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HasSourceAt",
          "possibleTypes": []
        },
        {
          "description": "HasSourceAtSpec allows filtering the list of HasSourceAt to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSourceAtSpec",
          "possibleTypes": []
        },
        {
          "description": "HashEqual is an attestation that represents when two artifact hash are similar based on a justification.\n\nJustification - string value representing why the artifacts are the equal\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation\nArtifacts - the artifacts (represented by algorithm and digest) that are equal",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "artifacts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HashEqual",
          "possibleTypes": []
        },
        {
          "description": "HashEqualSpec allows filtering the list of HashEqual to return.\n\nSpecifying just the artifacts allows to query for all equivalent artifacts (if they exist)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifacts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ArtifactSpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HashEqualSpec",
          "possibleTypes": []
        },
        {
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as \"4\") or integer (such as 4) input value will be accepted as an ID.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "ID",
          "possibleTypes": []
        },
        {
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Int",
          "possibleTypes": []
        },
        {
          "description": "IsDependency is an attestation that represents when a package is dependent on another package\n\nPackage - the package object type that represents the package\ndependentPackage - the package object type that represents the packageName (cannot be to the packageVersion)\nVersionRange - string value for version range that applies to the dependent package\nJustification - string value representing why the artifacts are the equal\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "package",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "dependentPackage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "versionRange",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "IsDependency",
          "possibleTypes": []
        },
        {
          "description": "IsDependencySpec allows filtering the list of IsDependency to return.\n\nNote: the package object must be defined to return its dependent packages.\nDependent Packages must represent the packageName (cannot be the packageVersion)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dependentPackage",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgNameSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "versionRange",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsDependencySpec",
          "possibleTypes": []
        },
        {
          "description": "IsOccurrence is an attestation represents when either a package or source is represented by an artifact\n\nSubject - union type that can be either a package or source object type\noccurrenceArtifacts - list of artifacts that represent the the package or source\nJustification - string value representing why the package or source is represented by the specified artifact\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation\n\nNote: Package or Source must be specified but not both at the same time.\nAttestation must occur at the PackageName or the PackageVersion or at the SourceName.\n\nIsOccurrence does not connect a package with a source. \nHasSourceAt attestation will be used to connect a package with a source",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PkgSrcObject",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "occurrenceArtifacts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "IsOccurrence",
          "possibleTypes": []
        },
        {
          "description": "IsOccurrenceSpec allows filtering the list of IsOccurrence to return.\nNote: Package or Source must be specified but not both at the same time\nFor package - a PackageName or PackageVersion must be specified (name or name, version, qualifiers and subpath)\nFor source - a SourceName must be specified (name, tag or commit)",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifacts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ArtifactSpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsOccurrenceSpec",
          "possibleTypes": []
        },
        {
          "description": "IsVulnerability is an attestation that represents when an OSV ID represents a CVE or GHSA\n\nOSV - the osv object type that represents OSV and its ID\nVulnerability - union type that consists of cve or ghsa\nJustification - the reason why the osv ID represents the cve or ghsa\nOrigin - where this attestation was generated from (based on which document)\nCollector - the GUAC collector that collected the document that generated this attestation",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "osv",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OSV",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "vulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "CveGhsaObject",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "IsVulnerability",
          "possibleTypes": []
        },
        {
          "description": "IsVulnerabilitySpec allows filtering the list of IsVulnerability to return.\nOnly CVE or GHSA can be specified at once.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "osv",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OSVSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "cve",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CVESpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ghsa",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GHSASpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsVulnerabilitySpec",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PkgInputSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingest a new package. Returns the ingested package trie",
              "isDeprecated": false,
              "name": "ingestPackage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Mutation",
          "possibleTypes": []
        },
        {
          "description": "OSV represents Open Source Vulnerability . It contains a OSV ID.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "osvId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "OSVId",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "OSV",
          "possibleTypes": []
        },
        {
          "description": "OSVId is the actual ID that is given to a specific vulnerability\n\nid field is mandatory. This maps to a GHSA or CVE ID\n\nThis node can be referred to by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "OSVId",
          "possibleTypes": []
        },
        {
          "description": "OSVSpec allows filtering the list of osv to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "osvId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "OSVSpec",
          "possibleTypes": []
        },
        {
          "description": "OsvCveGhsaObject is a union of OSV, CVE and GHSA. Any of these objects can be specified for vulnerability",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "OsvCveGhsaObject",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "OSV",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CVE",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "GHSA",
              "ofType": null
            }
          ]
        },
        {
          "description": "Package represents a package.\n\nIn the pURL representation, each Package matches a `pkg:<type>` partial pURL.\nThe `type` field matches the pURL types but we might also use `\"guac\"` for the\ncases where the pURL representation is not complete or when we have custom\nrules.\n\nThis node is a singleton: backends guarantee that there is exactly one node with\nthe same `type` value.\n\nAlso note that this is named `Package`, not `PackageType`. This is only to make\nqueries more readable.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespaces",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageNamespace",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Package",
          "possibleTypes": []
        },
        {
          "description": "PackageName is a name for packages.\n\nIn the pURL representation, each PackageName matches the\n`pkg:<type>/<namespace>/<name>` pURL.\n\nNames are always mandatory.\n\nThis is the first node in the trie that can be referred to by other parts of\nGUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "versions",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageVersion",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageName",
          "possibleTypes": []
        },
        {
          "description": "PackageNamespace is a namespace for packages.\n\nIn the pURL representation, each PackageNamespace matches the\n`pkg:<type>/<namespace>/` partial pURL.\n\nNamespaces are optional and type specific. Because they are optional, we use\nempty string to denote missing namespaces.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespace",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "names",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageName",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageNamespace",
          "possibleTypes": []
        },
        {
          "description": "PackageQualifier is a qualifier for a package, a key-value pair.\n\nIn the pURL representation, it is a part of the `<qualifiers>` part of the\n`pkg:<type>/<namespace>/<name>@<version>?<qualifiers>` pURL.\n\nQualifiers are optional, each Package type defines own rules for handling them,\nand multiple qualifiers could be attached to the same package.\n\nThis node cannot be directly referred by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageQualifier",
          "possibleTypes": []
        },
        {
          "description": "PackageQualifierInputSpec is the same as PackageQualifier, but usable as\nmutation input.\n\nGraphQL does not allow input types to contain composite types and does not allow\ncomposite types to contain input types. So, although in this case these two\ntypes are semantically the same, we have to duplicate the definition.\n\nBoth fields are mandatory.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageQualifierInputSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageQualifierSpec is the same as PackageQualifier, but usable as query\ninput.\n\nGraphQL does not allow input types to contain composite types and does not allow\ncomposite types to contain input types. So, although in this case these two\ntypes are semantically the same, we have to duplicate the definition.\n\nKeys are mandatory, but values could also be `null` if we want to match all\nvalues for a specific key.\n\nTODO(mihaimaruseac): Formalize empty vs null when the schema is fully done",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageQualifierSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageVersion is a package version.\n\nIn the pURL representation, each PackageName matches the\n`pkg:<type>/<namespace>/<name>@<version>` pURL.\n\nVersions are optional and each Package type defines own rules for handling them.\nFor this level of GUAC, these are just opaque strings.\n\nThis node can be referred to by other parts of GUAC.\n\nSubpath and qualifiers are optional. Lack of qualifiers is represented by an\nempty list and lack of subpath by empty string (to be consistent with\noptionality of namespace and version). Two nodes that have different qualifiers\nand/or subpath but the same version mean two different packages in the trie\n(they are different). Two nodes that have same version but qualifiers of one are\na subset of the qualifier of the other also mean two different packages in the\ntrie.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "version",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "qualifiers",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageQualifier",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subpath",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageVersion",
          "possibleTypes": []
        },
        {
          "description": "PkgInputSpec specifies a package for a mutation.\n\nThis is different than PkgSpec because we want to encode mandatatory fields:\n`type` and `name`. All optional fields are given empty default values.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "version",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "qualifiers",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PackageQualifierInputSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "subpath",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgInputSpec",
          "possibleTypes": []
        },
        {
          "description": "PkgNameSpec is used for IsDependency to input dependent packages. This is different from PkgSpec\nas the IsDependency attestation should only be allowed to be made to the packageName node and not the\npackageVersion node. Versions will be handled by the version_range in the IsDependency attestation node.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgNameSpec",
          "possibleTypes": []
        },
        {
          "description": "PkgSpec allows filtering the list of packages to return.\n\nEach field matches a qualifier from pURL. Use `null` to match on all values at\nthat level. For example, to get all packages in GUAC backend, use a PkgSpec\nwhere every field is `null`.\n\nEmpty string at a field means matching with the empty string. If passing in\nqualifiers, all of the values in the list must match. Since we want to return\nnodes with any number of qualifiers if no qualifiers are passed in the input, we\nmust also return the same set of nodes it the qualifiers list is empty. To match\non nodes that don't contain any qualifier, set `matchOnlyEmptyQualifiers` to\ntrue. If this field is true, then the qualifiers argument is ignored.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "version",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "qualifiers",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PackageQualifierSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": "false",
              "description": null,
              "name": "matchOnlyEmptyQualifiers",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subpath",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgSpec",
          "possibleTypes": []
        },
        {
          "description": "PkgSrcArtObject is a union of Package, Source and Artifact. Any of these objects can be specified",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "PkgSrcArtObject",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Package",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Source",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Artifact",
              "ofType": null
            }
          ]
        },
        {
          "description": "PkgSrcObject is a union of Package and Source. Any of these objects can be specified",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "PkgSrcObject",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Package",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Source",
              "ofType": null
            }
          ]
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifactSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ArtifactSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all artifacts",
              "isDeprecated": false,
              "name": "artifacts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builderSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "BuilderSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all builders",
              "isDeprecated": false,
              "name": "builders",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Builder",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyBadSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CertifyBadSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all CertifyBad",
              "isDeprecated": false,
              "name": "CertifyBad",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyBad",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyPkgSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CertifyPkgSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all CertifyPkg",
              "isDeprecated": false,
              "name": "CertifyPkg",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyPkg",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyScorecardSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CertifyScorecardSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all CertifyScorecard",
              "isDeprecated": false,
              "name": "CertifyScorecard",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyScorecard",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyVulnSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CertifyVulnSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all CertifyVuln",
              "isDeprecated": false,
              "name": "CertifyVuln",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyVuln",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "cveSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CVESpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all cve",
              "isDeprecated": false,
              "name": "cve",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CVE",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "ghsaSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "GHSASpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all ghsa",
              "isDeprecated": false,
              "name": "ghsa",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "GHSA",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSBOMSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "HasSBOMSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all HasSBOM",
              "isDeprecated": false,
              "name": "HasSBOMs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasSBOM",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSLSASpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "HasSLSASpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all HasSLSA",
              "isDeprecated": false,
              "name": "HasSLSA",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasSLSA",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSourceAtSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "HasSourceAtSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all HasSourceAt",
              "isDeprecated": false,
              "name": "HasSourceAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasSourceAt",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hashEqualSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "HashEqualSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all HashEqual",
              "isDeprecated": false,
              "name": "HashEquals",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HashEqual",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "isDependencySpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "IsDependencySpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all IsDependency",
              "isDeprecated": false,
              "name": "IsDependency",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "IsDependency",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "isOccurrenceSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "IsOccurrenceSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all IsOccurrence",
              "isDeprecated": false,
              "name": "IsOccurrences",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "IsOccurrence",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "isVulnerabilitySpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "IsVulnerabilitySpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all IsVulnerability",
              "isDeprecated": false,
              "name": "IsVulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "IsVulnerability",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "osvSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OSVSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all osv",
              "isDeprecated": false,
              "name": "osv",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "OSV",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PkgSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all packages",
              "isDeprecated": false,
              "name": "packages",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Package",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "sourceSpec",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "SourceSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all sources",
              "isDeprecated": false,
              "name": "sources",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Source",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Query",
          "possibleTypes": []
        },
        {
          "description": "SLSAPredicate are the values from the SLSA predicate in key-value pair form.\n// Predicate:\n\"predicateType\": \"https://slsa.dev/provenance/v1\",\n\"predicate\": {\n    \"buildDefinition\": {\n        \"buildType\": string,\n        \"externalParameters\": object,\n        \"systemParameters\": object,\n        \"resolvedDependencies\": [ ...#ArtifactReference ],\n    },\n    \"runDetails\": {\n        \"builder\": {\n            \"id\": string,\n            \"version\": string,\n            \"builderDependencies\": [ ...#ArtifactReference ],\n        },\n        \"metadata\": {\n            \"invocationId\": string,\n            \"startedOn\": #Timestamp,\n            \"finishedOn\": #Timestamp,\n        },\n        \"byproducts\": [ ...#ArtifactReference ],\n    }\n}\nwhere\n\"externalParameters\": {\n    \"repository\": \"https://github.com/octocat/hello-world\",\n    \"ref\": \"refs/heads/main\"\n},\n\nFor example: key = \"buildDefinition.externalParameters.repository\" value = \"https://github.com/octocat/hello-world\"\nThis node cannot be directly referred by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SLSAPredicate",
          "possibleTypes": []
        },
        {
          "description": "SLSAPredicateSpec is the same as SLSAPredicateSpec, but usable as query\ninput.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SLSAPredicateSpec",
          "possibleTypes": []
        },
        {
          "description": "ScorecardCheck are the individual checks from scorecard and their values, a key-value pair.\nFor example:  Branch-Protection, Code-Review...etc\nBased off scorecard's:\ntype jsonCheckResultV2 struct {\n\tDetails []string                 `json:\"details\"`\n\tScore   int                      `json:\"score\"`\n\tReason  string                   `json:\"reason\"`\n\tName    string                   `json:\"name\"`\n\tDoc     jsonCheckDocumentationV2 `json:\"documentation\"`\n}\nThis node cannot be directly referred by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "check",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "score",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "ScorecardCheck",
          "possibleTypes": []
        },
        {
          "description": "ScorecardCheckSpec is the same as ScorecardCheck, but usable as query\ninput.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "check",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "score",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ScorecardCheckSpec",
          "possibleTypes": []
        },
        {
          "description": "Source represents a source.\n\nThis can be the version control system that is being used.\n\nThis node is a singleton: backends guarantee that there is exactly one node with\nthe same `type` value.\n\nAlso note that this is named `Source`, not `SourceType`. This is only to make\nqueries more readable.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespaces",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SourceNamespace",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Source",
          "possibleTypes": []
        },
        {
          "description": "SourceName is a url of the repository and its tag or commit.\n\nSourceName is mandatory. Either a tag or commit needs to be specified.\n\nThis is the first node in the trie that can be referred to by other parts of\nGUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "tag",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "commit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SourceName",
          "possibleTypes": []
        },
        {
          "description": "SourceNamespace is a namespace for sources.\n\nThis can be represented as the location of the repo (such as github/gitlab/bitbucket)\n\nNamespaces are optional and type specific. Because they are optional, we use\nempty string to denote missing namespaces.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespace",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "names",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SourceName",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SourceNamespace",
          "possibleTypes": []
        },
        {
          "description": "SourceQualifierInput is the same as SourceQualifier, but usable as query\ninput.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "tag",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "commit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SourceQualifierInput",
          "possibleTypes": []
        },
        {
          "description": "SourceSpec allows filtering the list of sources to return.\n\nEmpty string at a field means matching with the empty string.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "qualifier",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceQualifierInput",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SourceSpec",
          "possibleTypes": []
        },
        {
          "description": "The `String`scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "String",
          "possibleTypes": []
        }
      ]
    }
  }
}